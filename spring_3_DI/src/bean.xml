<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Spring的依赖注入
			注入的方式3种：
				一：使用构造函数注入
				二：使用set方法注入
				三：使用annotation(注解)注入
			注入的数据类型3种：
				一：基本类型和String类型
				二：其他bean类型(必须是在spring的配置文件中出现过的bean)
				三：复杂类型(集合类型)
	 -->

    <!-- 构造函数注入 
    		涉及的标签：constructor-arg
    		标签的属性
    			type: 指定参数的类型
    			index: 指定参数的index,从0开始
    			name: 指定参数的名称 (一般用name)
    			===上面三个属性指定具体给哪个参数赋值，下面两个指定赋值的具体值===
    			value: 指定基本数据类型或String类型的数据
    			ref:指定其他bean类型数据
    		标签出现的位置：
    			写在bean标签内部
    -->
   
	<bean id="customerService" class="service.impl.CustomerServiceImpl" >
		<constructor-arg name="driver" value="com.mysql.jdbc.Driver"></constructor-arg>
		<constructor-arg name="port" value="3306"></constructor-arg>
		<constructor-arg name="today" ref="now"></constructor-arg>
	</bean>

	<bean id="now" class="java.util.Date"></bean>
	
	<!-- set方法注入
		涉及的标签：property
    		标签的属性
    			name: 指定参数的名称 (一般用name)
    			===上面三个属性指定具体给哪个参数赋值，下面两个指定赋值的具体值===
    			value: 指定基本数据类型或String类型的数据
    			ref:指定其他bean类型数据
   		标签出现的位置：
    			写在bean标签内部
	 -->
	 
	 <bean id="customerService2" class="service.impl.CustomerServiceImpl2" >
		<property name="driver" value="com.mysql.jdbc.Driver2"></property>
		<property name="port" value="3302"></property>
		<property name="today" ref="now"></property>
	</bean>
	
	<!-- 复杂类型的注入
			结构相同，标签可以互换
	 -->
	
	<bean id="customerService3" class="service.impl.CustomerServiceImpl3" >
		<property name="myStrs">
			<array>
				<value>A</value>
				<value>B</value>
			</array>
		</property>
		<property name="myList">
			<list>
				<value>A</value>
				<value>B</value>
			</list>
		</property>
		<property name="myMap">
			<map>
				<entry key = "key1" value="value1"></entry>
				<entry key = "key2">
					<value>value2</value>
				</entry>
			</map>
		</property>
		<property name="myProps">
			<props>
				<prop key="prop1">propvalue1</prop>
			</props>
		</property>
	</bean>
	
</beans>